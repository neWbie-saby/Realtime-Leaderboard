// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: match_winners.sql

package database

import (
	"context"
)

const addWinnerOfMatch = `-- name: AddWinnerOfMatch :exec
INSERT INTO match_winners (match_id, user_id)
VALUES ($1, $2)
`

type AddWinnerOfMatchParams struct {
	MatchID int32
	UserID  int32
}

func (q *Queries) AddWinnerOfMatch(ctx context.Context, arg AddWinnerOfMatchParams) error {
	_, err := q.db.ExecContext(ctx, addWinnerOfMatch, arg.MatchID, arg.UserID)
	return err
}

const getMatchWinners = `-- name: GetMatchWinners :many
SELECT user_id FROM match_winners WHERE match_id = $1
`

func (q *Queries) GetMatchWinners(ctx context.Context, matchID int32) ([]int32, error) {
	rows, err := q.db.QueryContext(ctx, getMatchWinners, matchID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []int32
	for rows.Next() {
		var user_id int32
		if err := rows.Scan(&user_id); err != nil {
			return nil, err
		}
		items = append(items, user_id)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
